<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- The Basics -->
  <groupId>edu.hawaii.jabsom.tri</groupId>
  <artifactId>ECMOjo</artifactId>
  <version>2.4.0</version>
  <url>http://ecmojo.sourceforge.net</url>

  <!-- The Properties -->
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	<release.version>${project.version}</release.version>
	<release.time>${maven.build.timestamp}</release.time>
	<maven.build.timestamp.format>yyyy-MM-dd.HHmm</maven.build.timestamp.format>
  </properties>

  <!-- The Dependencies -->
  <dependencies>
	<dependency>
	  <groupId>junit</groupId>
	  <artifactId>junit</artifactId>
	  <version>4.11</version>
	  <scope>test</scope>
	</dependency>
	<dependency>
	  <groupId>java2html</groupId>
	  <artifactId>j2h</artifactId>
	  <version>1.3.1</version>
    </dependency>
    <dependency>
	  <groupId>tomcat</groupId>
	  <artifactId>catalina-ant</artifactId>
	  <version>5.5.15</version>
	</dependency>
    <dependency>
	  <groupId>jgoodies</groupId>
	  <artifactId>forms</artifactId>
	  <version>1.0.4</version>
	</dependency>
	<dependency>
	  <groupId>org.swinglabs</groupId>
	  <artifactId>swingx</artifactId>
	  <version>0.9.4</version>
	</dependency>
    <dependency>
	  <groupId>pnuts</groupId>
	  <artifactId>pnuts</artifactId>
	  <version>1.2</version>
    </dependency>
    <dependency>
	  <groupId>javax.activation</groupId>
	  <artifactId>activation</artifactId>
	  <version>1.1.1</version>
    </dependency>
    <dependency>
	  <groupId>javax.mail</groupId>
	  <artifactId>mail</artifactId>
	  <version>1.4.4</version>
    </dependency>
    <dependency>
	  <groupId>jsyntaxpane</groupId>
	  <artifactId>jsyntaxpane</artifactId>
	  <version>0.9.5</version>
	</dependency>
  </dependencies>

  <!-- The Build -->
  <build>
	<resources>
	  <!-- TODO: Create resource file to load on classpath for buildtime -->
      <resource>
		<directory>src/main/java</directory>
		<filtering>true</filtering>
		<targetPath>${basedir}/target/filtered-sources/java</targetPath>
	  </resource>
	  <resource>
	    <directory>src/main/resources</directory>
	  </resource>
    </resources>
    <sourceDirectory>${basedir}/target/filtered-sources/java</sourceDirectory>
	<plugins>
	  <plugin>
		<artifactId>maven-resources-plugin</artifactId>
        <version>2.5</version>
		<executions>
		  <execution>
			<id>copy-resources</id>
			<phase>process-resources</phase>
			<goals>
			  <goal>copy-resources</goal>
			</goals>
			<configuration>
			  <outputDirectory>${project.build.directory}/scenario</outputDirectory>
              <includeEmptyDirs>true</includeEmptyDirs>
			  <resources>
				<resource>
				  <directory>src/main/app-resources/copy/scenario</directory>
				</resource>
			  </resources>
			</configuration>
		  </execution>
		</executions>
	  </plugin>
	  <plugin>
	    <groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-dependency-plugin</artifactId>
		<version>2.4</version>
		<executions>
		  <execution>
			<id>copy-dependencies</id>
			<phase>package</phase>
			<goals>
			  <goal>copy-dependencies</goal>
		    </goals>
			<configuration>
			  <outputDirectory>${project.build.directory}/lib</outputDirectory>
			  <overWriteReleases>false</overWriteReleases>
			  <overWriteSnapshots>false</overWriteSnapshots>
			  <overWriteIfNewer>true</overWriteIfNewer>
			</configuration>
		  </execution>
		</executions>
	  </plugin>
	  <plugin>
        <groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-jar-plugin</artifactId>
		<version>2.4</version>
		<configuration>
		  <archive>
		    <manifest>
			  <addClasspath>true</addClasspath>
			  <classpathPrefix>lib/</classpathPrefix>
			  <mainClass>edu.hawaii.jabsom.tri.ecmo.app.ECMOApp</mainClass>
			</manifest>
		  </archive>
        </configuration>
	  </plugin>
	  <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-assembly-plugin</artifactId>
		<version>2.3</version>
		<configuration>
		  <descriptors>
		    <descriptor>${basedir}/src/main/assembly/assembly.xml</descriptor>
			<!--<descriptor>${basedir}/src/main/assembly/archive.xml</descriptor>-->
		  </descriptors>
		  <tarLongFileMode>gnu</tarLongFileMode>
		  <!--<descriptorRefs>
			<descriptorRef>jar-with-dependencies</descriptorRef>
		  </descriptorRefs>-->
	    </configuration>
		<executions>
		  <execution>
			<id>make-dist</id>
			<phase>package</phase>
			<goals>
			  <goal>single</goal>
			</goals>
		  </execution>
	    </executions>
	  </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <phase>package</phase>
            <configuration>
				<target>
				  <!-- Use existing ant buildfile -->
				  <ant antfile="${basedir}/build.xml">
				    <target name="dist" />
				  </ant>
				  <!-- <tar destfile="${project.build.directory}/${project.build.finalName}.tar.gz" compression="gzip">
				    <tarfileset dir="${basedir}">
				      <exclude name="target/**" />
				      <exclude name="doc/**" />
				      <exclude name="www/**" />
				    </tarfileset>
				  </tar> -->
				</target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.16</version>
        <configuration>
        <!-- 
          <useSystemClassLoader>true</useSystemClassLoader>
          <addtionalClasspathElements>
            <additionalClasspathElement>
              ${java.home}
            </additionalClasspathElement>
            <additionalClasspathElement>
               ${project.build.testSourceDirectory}
            </additionalClasspathElement>
          </addtionalClasspathElements>
          <systemPropertyVariables>
            <jdk.util.TimeZone.allowSetDefault>true</jdk.util.TimeZone.allowSetDefault>
          </systemPropertyVariables> -->
        </configuration>
      </plugin>
      <!-- Currently using ant build for distributions mac, win, src
      <plugin>
		<groupId>org.codehaus.mojo</groupId>
		<artifactId>osxappbundle-maven-plugin</artifactId>
		<version>1.0-alpha-2</version>
		<configuration>
		  <mainClass>edu.hawaii.jabsom.tri.ecmo.app.ECMOApp</mainClass>
          <iconFile>${basedir}/src/main/app-resources/Icons/logo-128x128.icns</iconFile>
		  <dictionaryFile>${basedir}/src/main/app-resources/Info.plist</dictionaryFile>
		  <additionalResources>
			<fileSet>
			  <directory>${basedir}</directory>
			  <includes>
				<include>README.txt</include>
				<include>LICENSE.txt</include>
			  </includes>
		    </fileSet>
            <fileSet>
			  <directory>${basedir}/src/main/app-resources/copy</directory>
			  <includes>
				<include>**/*</include>
			  </includes>
			</fileSet>
		  </additionalResources>
	    </configuration>
        <executions>
		  <execution>
			<phase>package</phase>
			<goals>
			  <goal>bundle</goal>
			</goals>
		  </execution>
	    </executions>
	  </plugin>
	  <plugin>
		<groupId>com.akathist.maven.plugins.launch4j</groupId>
		<artifactId>launch4j-maven-plugin</artifactId>
		<version>1.3</version>
		<executions>
		  <execution>
			<id>win</id>
			<phase>package</phase>
			<goals>
			  <goal>launch4j</goal>
			</goals>
			<configuration>
			  <headerType>gui</headerType>
			  <outfile>${project.build.directory}/${project.name}.exe</outfile>
			  <cmdLine>infant</cmdLine>
			  <jar>${project.build.directory}/${project.build.finalName}.jar</jar>
			  <errTitle>ECMOjo</errTitle>
			  <icon>${basedir}/src/main/app-resources/Icons/logo-32x32.ico</icon>
			  <classPath>
				<mainClass>edu.hawaii.jabsom.tri.ecmo.app.ECMOApp</mainClass>
				<addDependencies>true</addDependencies>
				<jarLocation>lib/</jarLocation>
			  </classPath>
			  <jre>
				<minVersion>1.6.0</minVersion>
			  </jre>
			  <versionInfo>
				<fileVersion>2.4.0.0</fileVersion>
				<txtFileVersion>${project.build.finalName} ${release.version} (build: ${release.time})</txtFileVersion>
				<fileDescription>ECMOjo: ECMO simulation training</fileDescription>
				<copyright>TRI</copyright>
				<companyName>TRI</companyName>
				<productVersion>2.4.0.0</productVersion>
				<txtProductVersion>${project.build.finalName} ${release.version} (build: ${release.time})</txtProductVersion>
				<productName>${project.name}</productName>
				<internalName>${project.build.finalName}</internalName>
				<originalFilename>${project.name}.exe</originalFilename>
			  </versionInfo>
			</configuration>
		  </execution>
		</executions>
	  </plugin> -->
	</plugins>
  </build>

  <!-- Other repositories -->
  <!-- <repositories>
    <repository>
	  <id>maven2-repository.dev.java.net</id>
	  <name>Java.net Repository for Maven</name>
	  <url>http://download.java.net/maven/2/</url>
	  <layout>default</layout>
    </repository>
	<repository>
	  <id>akathist-repository</id>
	  <name>Akathist Repository</name>
	  <url>http://www.9stmaryrd.com/maven</url>
	</repository>
  </repositories>
  <pluginRepositories>
	<pluginRepository>
      <id>akathist-repository</id>
	  <name>Akathist Repository</name>
	  <url>http://www.9stmaryrd.com/maven</url>
    </pluginRepository>
  </pluginRepositories> -->
</project>